import { NgModule, Inject, Optional, OpaqueToken, SkipSelf } from '@angular/core';
import { ScrollSpyService } from './core/service';
import { ScrollSpyDirective } from './core/window.directive';
import { ScrollSpyElementDirective } from './core/element.directive';
import { ScrollSpyIndexService } from './plugin/index.service';
export * from './core/service';
export * from './core/window.directive';
export * from './core/element.directive';
export * from './plugin/index.service';
export var NG2SCROLLSPY_FORROOT_GUARD = new OpaqueToken('NG2SCROLLSPY_FORROOT_GUARD');
export function provideForRootGuard(scrollSpyService) {
    if (scrollSpyService) {
        throw new Error("ScrollSpyModule.forRoot() called twice. Lazy loaded modules should declare directives directly.");
    }
    return 'guarded';
}
var ScrollSpyModule = (function () {
    function ScrollSpyModule(guard) {
    }
    ScrollSpyModule.forRoot = function () {
        return {
            ngModule: ScrollSpyModule,
            providers: [
                {
                    provide: NG2SCROLLSPY_FORROOT_GUARD,
                    useFactory: provideForRootGuard,
                    deps: [[ScrollSpyService, new Optional(), new SkipSelf()]]
                },
                ScrollSpyService,
                ScrollSpyIndexService
            ]
        };
    };
    return ScrollSpyModule;
}());
export { ScrollSpyModule };
ScrollSpyModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ScrollSpyDirective, ScrollSpyElementDirective],
                exports: [ScrollSpyDirective, ScrollSpyElementDirective]
            },] },
];
/** @nocollapse */
ScrollSpyModule.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG2SCROLLSPY_FORROOT_GUARD,] },] },
]; };
