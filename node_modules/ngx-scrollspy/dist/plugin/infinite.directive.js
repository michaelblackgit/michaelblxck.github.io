import { Directive, Injectable, Input, Output, EventEmitter } from '@angular/core';
import { ScrollSpyService } from '../index';
var ScrollSpyInfiniteDirective = (function () {
    function ScrollSpyInfiniteDirective(scrollSpy) {
        this.scrollSpy = scrollSpy;
        this.scrollSpyInfiniteEvent = new EventEmitter();
        this.defaultOptions = {
            spyId: 'window',
            distanceRatio: 1
        };
    }
    ScrollSpyInfiniteDirective.prototype.ngOnInit = function () {
        if (!this.options) {
            this.options = {};
        }
        this.options = Object.assign(this.defaultOptions, this.options);
        if (this.scrollSpyInfiniteDisabled === undefined) {
            this.scrollSpyInfiniteDisabled = false;
        }
    };
    ScrollSpyInfiniteDirective.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (!!this.scrollSpy.getObservable(this.options.spyId)) {
            this.scrollStream$ = this.scrollSpy.getObservable(this.options.spyId).throttleTime(200).subscribe(function (e) {
                if (!_this.scrollSpyInfiniteDisabled) {
                    _this.evaluateScroll(e.target);
                }
            });
        }
        else {
            return console.warn('ScrollSpyInfinite: No ScrollSpy observable for id "' + this.options.spyId + '"');
        }
    };
    ScrollSpyInfiniteDirective.prototype.evaluateScroll = function (target) {
        if (this.options.spyId === 'window') {
            var scrollHeight = target.document.documentElement.scrollHeight;
            var scrollTop = target.pageYOffset || target.parentWindow.pageYOffset;
            var offsetHeight = target.document.documentElement.clientHeight;
            if (scrollHeight - scrollTop - offsetHeight <= offsetHeight * this.options.distanceRatio) {
                this.scrollSpyInfiniteEvent.next({});
            }
        }
        else {
            var scrollHeight = target.scrollingElement ?
                target.scrollingElement.scrollHeight
                : target.scrollHeight;
            var scrollTop = target.scrollingElement ?
                target.scrollingElement.scrollTop
                : target.scrollTop;
            var offsetHeight = target.scrollingElement ?
                target.scrollingElement.offsetHeight
                : target.offsetHeight;
            if (scrollHeight - scrollTop - offsetHeight <= offsetHeight * this.options.distanceRatio) {
                this.scrollSpyInfiniteEvent.next({});
            }
        }
    };
    ScrollSpyInfiniteDirective.prototype.ngOnDestroy = function () {
        this.scrollStream$.unsubscribe();
    };
    return ScrollSpyInfiniteDirective;
}());
export { ScrollSpyInfiniteDirective };
ScrollSpyInfiniteDirective.decorators = [
    { type: Injectable },
    { type: Directive, args: [{
                selector: '[scrollSpyInfinite]'
            },] },
];
/** @nocollapse */
ScrollSpyInfiniteDirective.ctorParameters = function () { return [
    { type: ScrollSpyService, },
]; };
ScrollSpyInfiniteDirective.propDecorators = {
    'options': [{ type: Input, args: ['scrollSpyInfinite',] },],
    'scrollSpyInfiniteDisabled': [{ type: Input },],
    'scrollSpyInfiniteEvent': [{ type: Output },],
};
